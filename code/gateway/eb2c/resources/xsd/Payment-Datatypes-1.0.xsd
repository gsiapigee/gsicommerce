<?xml version="1.0" encoding="UTF-8"?>

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            elementFormDefault="qualified" attributeFormDefault="unqualified"
            targetNamespace="http://api.gsicommerce.com/schema/checkout/1.0"
            xmlns="http://api.gsicommerce.com/schema/checkout/1.0"
            version="1.0">

    <xsd:include schemaLocation="Payment-Datatypes-CurrencyCode-1.0.xsd"/>
    <xsd:include schemaLocation="Checkout-Datatypes-1.0.xsd"/>

    <xsd:simpleType name="SuccessFailResponseCodeType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
            The result of the request transaction.
            Examples:
            StoredValueRedeem - Fail means the redemption did not occur.
            CreditCardAuth - Fail means the authorization did not occur.
            For credit cards more information is returned in Auth, AVS and CSC ResponseCodes.
            Timeout means the service timed out waiting for a response from the authorizer.
            Depending on your company's business rules, you may want to accept an order
            where the ResponseCode is Timeout for a credit card authorization so as not to lose the order.
            The authorization can be attempted by the OMS before processing the order.
            In the case of a StoredValue, you would never accept an order unless the redeem was successful.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Fail"/>
            <xsd:enumeration value="Success"/>
            <xsd:enumeration value="Timeout"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="AuthorizationResponseCodeType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
            Codes defining reasons for authorization declines.
            Bank specific authorization response codes are mapped to a canonical set of codes.
            The canonical codes will be returned in this field.
            The enumeration of the canonical codes and their descriptions will be documented separately. 
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:maxLength value="16"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="AmountType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
            Amount field for requests and responses.
            Will contain the currency of the transaction.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:simpleContent>
            <xsd:extension base="AmountBaseType">
                <xsd:attribute name="currencyCode" type="ISOCurrencyCodeType" use="required"/>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:simpleType name="PinType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
            The personal identification number.
            Normally associated with atm cards or gift cards.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:maxLength value="8"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="CardSecurityCodeType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
            The card security code is the number on the back of the credit card
            that is normally required for authorizations.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="(\d{3,4})?"></xsd:pattern>
            <xsd:maxLength value="4"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="AccountUniqueIdType">
        <xsd:restriction base="xsd:string">
            <xsd:maxLength value="30"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="PaymentAccountUniqueIdType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Global type to cover Payment Account Numbers (PAN)
                Examples include: credit card numbers, gift card numbers, bank account numbers.
                Credit cards and gift cards are typically length 14-19.  Bank Account numbers
                have a much higher range of lengths, up to 30 digits in Europe.
                Either a raw PAN or a token representing a PAN.
                The type includes an attribute, isToken, to indicate if the PAN is tokenized.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:simpleContent>
            <xsd:extension base="AccountUniqueIdType">
                <xsd:attribute name="isToken" type="xsd:boolean" use="required"/>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:simpleType name="TenderTypeType">

        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                This element identifies the tender type.
                Example values: 
                Credit card: VC (Visa), MC (Master Card), AM (American Express) 
                
                Stred Value: 
                Stored Value tender type codes are provider specific (i.e Blackhawk, SVS, etc.)
                Example: BH (Blackhawk), SP (SVS), OGC (GSI Online Gift Certificate)
            </xsd:documentation>
        </xsd:annotation>

        <xsd:restriction base="xsd:string">
            <xsd:maxLength value="4"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="SecureVerificationDataType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                3D Secure Verification data
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="AuthenticationAvailable">
                <xsd:annotation>
                    <xsd:documentation xml:lang="en">
                        Verified by VISA (VPAS) e-commerce transactions only. Verify
                        Enrollment Response from the VERes message, returned to the
                        POE from the ACS server as a result of a Verify Enrollment Request

                        For all other transactions, enter spaces.

                        'Y' - Card eligible for authentication processing
                        'N' - Attempted authentication. Card eligible for
                        attempts liability, but attempts proof is not
                        available from Issuer.
                        'U' - Unable to process or card not eligible for
                        attempts.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                        <xsd:maxLength value="1"/>
                        <xsd:minLength value="1"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:element>
            <xsd:element name="AuthenticationStatus">
                <xsd:annotation>
                    <xsd:documentation xml:lang="en">
                        Verified by VISA (VPAS) / MasterCard Secure Code (UCAF)
                        Transaction Status: For e-commerce VISA and MasterCard
                        transactions only. Returned in the PARes message from the ACS
                        server in the “Transaction Status” field.

                        For all other transactions, enter spaces.

                        'Y' - Authentication Approved
                        'A' - Authentication attempted.
                        'U' - Unable to authenticate (due to technical
                        problems or excluded card type).
                        'N' - Authentication failed.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                        <xsd:maxLength value="1"/>
                        <xsd:minLength value="1"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:element>
            <xsd:element name="CavvUcaf">
                <xsd:annotation>
                    <xsd:documentation xml:lang="en">
                        E-commerce Verified by VISA and MasterCard SecureCode
                        transactions only. Data returned in authentication request. For
                        VISA, this field contains CAVV values in upacked, displayable format
                        (0-9, A-F). For MasterCard, this field contains the UCAF data in
                        upacked, displayable base-64 format (A-Z, a-z, 0-9, +, /, -). Left
                        justify, space-fill right.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                        <xsd:maxLength value="64"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:element>
            <xsd:element name="TransactionId">
                <xsd:annotation>
                    <xsd:documentation xml:lang="en">
                        E-commerce Verified by VISA transactions only. XID data returned
                        from authentication request in upacked, displayable format (0-9, AF).
                        Left justify, space-fill right.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                        <xsd:maxLength value="64"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:element>
            <xsd:element name="ECI" type="xsd:string" minOccurs="0"/>
            <xsd:element name="PayerAuthenticationResponse">
                <xsd:annotation>
                    <xsd:documentation xml:lang="en">
                        The Issuer Bank ACS (Access Control Server) authenticates the cardholder.
                        The authentication result is represented by the Payer Authentication Response (PARes)
                        generated by the Card Issuer ACS.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                        <xsd:maxLength value="10000"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="PayPalPaymentInfoType">
        <xsd:sequence>
            <xsd:element name="PaymentStatus" type="xsd:string" minOccurs="0"/>
            <xsd:element name="PendingReason" type="xsd:string" minOccurs="0"/>
            <xsd:element name="ReasonCode" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="PayPalAddressType">
        <xsd:complexContent>
            <xsd:extension base="PhysicalAddressType">
                <xsd:sequence>
                    <xsd:element name="AddressStatus" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="LineItemsType">
        <xsd:sequence>
            <xsd:element name="LineItemsTotal" type="AmountType">
                <xsd:annotation>
                    <xsd:documentation xml:lang="en">
                        Total amount for all line items excluding shipping and tax; calculation works as follows
                        LineItemsTotal = First-LineItem-Quantity * First-LineItem--Amount + next one;
                        PayPal validates above calculation and throws error message for incorrect line items total;
                        LineItemsTotal must always be greater than 0.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="ShippingTotal" type="AmountType">
                <xsd:annotation>
                    <xsd:documentation xml:lang="en">
                        Total shipping amount for all line items.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="TaxTotal" type="AmountType">
                <xsd:annotation>
                    <xsd:documentation xml:lang="en">
                        Total tax amount for all line items.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="LineItem" type="LineItemType" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="LineItemType">
        <xsd:sequence>
            <xsd:element name="Name" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation xml:lang="en">
                        Line item name like product title.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="SequenceNumber" type="xsd:string" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation xml:lang="en">
                        Sequence number of current line item in cart if available.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="Quantity" type="xsd:int">
                <xsd:annotation>
                    <xsd:documentation xml:lang="en">
                        Quantity for this line item.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="UnitAmount" type="AmountType">
                <xsd:annotation>
                    <xsd:documentation xml:lang="en">
                        Unit price amount for a line item.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:simpleType name="ItemDesc">
        <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="50"/>
        </xsd:restriction>
    </xsd:simpleType>

<!-- BEGIN:  PAYMENT CONTEXT DEFINITION --> 
<xsd:complexType name="PaymentContextType">
  <xsd:complexContent>
    <xsd:extension base="PaymentContextBaseType">
      <xsd:sequence>
        <xsd:element name="PaymentAccountUniqueId" type="PaymentAccountUniqueIdType">
          <xsd:annotation>
            <xsd:documentation xml:lang="en">
            Either a raw PAN or a token representing a PAN.
            The type includes an attribute, isToken, to indicate if the PAN is tokenized.
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:extension>
  </xsd:complexContent>
</xsd:complexType>

<xsd:complexType name="PaymentContextBaseType">
  <xsd:annotation>
    <xsd:documentation xml:lang="en">
    A set of values to identify all transactions for a unique payment for a single order
    </xsd:documentation>
  </xsd:annotation>

  <xsd:sequence>
    <xsd:element name="OrderId" type="OrderIdType">
      <xsd:annotation>
        <xsd:documentation xml:lang="en">
        A unique identifier for the order
        The client is responsible for ensuring uniqueness across all transactions the client initiates with this service.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:element>
  </xsd:sequence>
</xsd:complexType>

<xsd:simpleType name="OrderIdType">
  <xsd:restriction base="xsd:string">
    <xsd:minLength value="1"/>
    <xsd:maxLength value="20" />
  </xsd:restriction>
</xsd:simpleType>

<xsd:simpleType name="OrderAppIdType">
  <xsd:restriction base="xsd:string">
    <xsd:minLength value="1"/>
    <xsd:maxLength value="20" />
  </xsd:restriction>
</xsd:simpleType>

<!-- END:  PAYMENT CONTEXT DEFINITION --> 

</xsd:schema>
